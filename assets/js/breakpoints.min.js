var breakpoints = (function() {
    "use strict";

    var list = null;
    var media = {};
    var events = [];

    function init(e) {
        list = e;
        window.addEventListener("resize", poll);
        window.addEventListener("orientationchange", poll);
        window.addEventListener("load", poll);
        window.addEventListener("fullscreenchange", poll);
    }

    function active(e) {
        if (!(e in media)) {
            var a, n;
            if (">=" == e.substr(0, 2)) {
                a = "gte";
                n = e.substr(2);
            } else if ("<=" == e.substr(0, 2)) {
                a = "lte";
                n = e.substr(2);
            } else if (">" == e.substr(0, 1)) {
                a = "gt";
                n = e.substr(1);
            } else if ("<" == e.substr(0, 1)) {
                a = "lt";
                n = e.substr(1);
            } else if ("!" == e.substr(0, 1)) {
                a = "not";
                n = e.substr(1);
            } else {
                a = "eq";
                n = e;
            }

            if (n && n in list) {
                var i = list[n];
                var r, d, c;
                if (Array.isArray(i)) {
                    r = parseInt(i[0]);
                    d = parseInt(i[1]);
                    if (isNaN(r)) {
                        if (isNaN(d)) return;
                        c = i[1].substr(String(d).length);
                    } else {
                        c = i[0].substr(String(r).length);
                    }
                    if (isNaN(r)) {
                        switch (a) {
                            case "gte":
                                media[e] = "screen";
                                break;
                            case "lte":
                                media[e] = "screen and (max-width: " + d + c + ")";
                                break;
                            case "gt":
                                media[e] = "screen and (min-width: " + (d + 1) + c + ")";
                                break;
                            case "lt":
                                media[e] = "screen and (max-width: -1px)";
                                break;
                            case "not":
                                media[e] = "screen and (min-width: " + (d + 1) + c + ")";
                                break;
                            default:
                                media[e] = "screen and (max-width: " + d + c + ")";
                        }
                    } else if (isNaN(d)) {
                        switch (a) {
                            case "gte":
                                media[e] = "screen and (min-width: " + r + c + ")";
                                break;
                            case "lte":
                                media[e] = "screen";
                                break;
                            case "gt":
                                media[e] = "screen and (max-width: -1px)";
                                break;
                            case "lt":
                                media[e] = "screen and (max-width: " + (r - 1) + c + ")";
                                break;
                            case "not":
                                media[e] = "screen and (max-width: " + (r - 1) + c + ")";
                                break;
                            default:
                                media[e] = "screen and (min-width: " + r + c + ")";
                        }
                    } else {
                        switch (a) {
                            case "gte":
                                media[e] = "screen and (min-width: " + r + c + ")";
                                break;
                            case "lte":
                                media[e] = "screen and (max-width: " + d + c + ")";
                                break;
                            case "gt":
                                media[e] = "screen and (min-width: " + (d + 1) + c + ")";
                                break;
                            case "lt":
                                media[e] = "screen and (max-width: " + (r - 1) + c + ")";
                                break;
                            case "not":
                                media[e] = "screen and (max-width: " + (r - 1) + c + "), screen and (min-width: " + (d + 1) + c + ")";
                                break;
                            default:
                                media[e] = "screen and (min-width: " + r + c + ") and (max-width: " + d + c + ")";
                        }
                    }
                } else {
                    media[e] = "(" == i.charAt(0) ? "screen and " + i : null;
                }
            }
        }
        return media[e] !== false && window.matchMedia(media[e]).matches;
    }

    function on(e, n) {
        events.push({ query: e, handler: n, state: false });
        if (active(e)) {
            n();
        }
    }

    function poll() {
        for (var i = 0; i < events.length; i++) {
            var event = events[i];
            if (active(event.query)) {
                if (!event.state) {
                    event.state = true;
                    event.handler();
                }
            } else {
                if (event.state) {
                    event.state = false;
                }
            }
        }
    }

    return {
        init: init,
        on: on,
        active: active
    };
})();

// Export the breakpoints module for use
